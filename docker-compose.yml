services: 
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auction_db
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 30s
      retries: 5

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongo",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5

  auction-svc:
    image: efaby10/auction-svc:latest
    build:
      context: .
      dockerfile: ./src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=auction_db 
      - IdentityServiceUrl=http://identity-svc
    ports:
      - "7001:80"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  search-svc:
    image: efaby10/search-svc:latest
    build:
      context: .
      dockerfile: ./src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDb=mongodb://root:mongopw@mongodb:27017
      - AuctionServiceUrl=http://auction-svc
    ports:
      - "7002:80"
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_started

  identity-svc:
    image: efaby10/identity-svc:latest
    build:
      context: .
      dockerfile: ./src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=identity_db 
    volumes:
      - dataprotection-keys:/root/.aspnet/DataProtection-Keys
    ports:
      - "5001:80"
    depends_on:
      postgres:
        condition: service_healthy

  gateway-svc:
    image: efaby10/gateway-svc:latest
    build:
      context: .
      dockerfile: ./src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "6001:80"

volumes:
  mongodata:
  dataprotection-keys: